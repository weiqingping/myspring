<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.my.test.dao.interfaces.SchedulerConfigMapper" >
  <resultMap id="BaseResultMap" type="com.my.test.dao.entity.SchedulerConfig" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="JOB_CLASS" property="jobClass" jdbcType="VARCHAR" />
    <result column="JOB_BEAN_NAME" property="jobBeanName" jdbcType="VARCHAR" />
    <result column="METHOD_NAME" property="methodName" jdbcType="VARCHAR" />
    <result column="CRON_EXPRESSION" property="cronExpression" jdbcType="VARCHAR" />
    <result column="CONCURRENT" property="concurrent" jdbcType="INTEGER" />
    <result column="ENABLE_IP" property="enableIp" jdbcType="VARCHAR" />
    <result column="DELAY_TIME" property="delayTime" jdbcType="BIGINT" />
    <result column="FLAG" property="flag" jdbcType="INTEGER" />
    <result column="EFFECT_TIME" property="effectTime" jdbcType="TIMESTAMP" />
    <result column="EXPIRE_TIME" property="expireTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.my.test.dao.entity.SchedulerConfig" extends="BaseResultMap" >
    <result column="ARGUMENTS" property="arguments" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, NAME, JOB_CLASS, JOB_BEAN_NAME, METHOD_NAME, CRON_EXPRESSION, CONCURRENT, ENABLE_IP, 
    DELAY_TIME, FLAG, EFFECT_TIME, EXPIRE_TIME
  </sql>
  <sql id="Blob_Column_List" >
    ARGUMENTS
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.my.test.dao.entity.SchedulerConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from TF_SCHEDULER_CONF
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.my.test.dao.entity.SchedulerConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TF_SCHEDULER_CONF
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from TF_SCHEDULER_CONF
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from TF_SCHEDULER_CONF
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.my.test.dao.entity.SchedulerConfigExample" >
    delete from TF_SCHEDULER_CONF
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.my.test.dao.entity.SchedulerConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into TF_SCHEDULER_CONF (ID, NAME, JOB_CLASS, 
      JOB_BEAN_NAME, METHOD_NAME, CRON_EXPRESSION, 
      CONCURRENT, ENABLE_IP, DELAY_TIME, 
      FLAG, EFFECT_TIME, EXPIRE_TIME, 
      ARGUMENTS)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{jobClass,jdbcType=VARCHAR}, 
      #{jobBeanName,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, #{cronExpression,jdbcType=VARCHAR}, 
      #{concurrent,jdbcType=INTEGER}, #{enableIp,jdbcType=VARCHAR}, #{delayTime,jdbcType=BIGINT}, 
      #{flag,jdbcType=INTEGER}, #{effectTime,jdbcType=TIMESTAMP}, #{expireTime,jdbcType=TIMESTAMP}, 
      #{arguments,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.my.test.dao.entity.SchedulerConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into TF_SCHEDULER_CONF
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="name != null" >
        NAME,
      </if>
      <if test="jobClass != null" >
        JOB_CLASS,
      </if>
      <if test="jobBeanName != null" >
        JOB_BEAN_NAME,
      </if>
      <if test="methodName != null" >
        METHOD_NAME,
      </if>
      <if test="cronExpression != null" >
        CRON_EXPRESSION,
      </if>
      <if test="concurrent != null" >
        CONCURRENT,
      </if>
      <if test="enableIp != null" >
        ENABLE_IP,
      </if>
      <if test="delayTime != null" >
        DELAY_TIME,
      </if>
      <if test="flag != null" >
        FLAG,
      </if>
      <if test="effectTime != null" >
        EFFECT_TIME,
      </if>
      <if test="expireTime != null" >
        EXPIRE_TIME,
      </if>
      <if test="arguments != null" >
        ARGUMENTS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null" >
        #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="jobBeanName != null" >
        #{jobBeanName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="concurrent != null" >
        #{concurrent,jdbcType=INTEGER},
      </if>
      <if test="enableIp != null" >
        #{enableIp,jdbcType=VARCHAR},
      </if>
      <if test="delayTime != null" >
        #{delayTime,jdbcType=BIGINT},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="effectTime != null" >
        #{effectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="arguments != null" >
        #{arguments,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.my.test.dao.entity.SchedulerConfigExample" resultType="java.lang.Integer" >
    select count(*) from TF_SCHEDULER_CONF
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update TF_SCHEDULER_CONF
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.jobClass != null" >
        JOB_CLASS = #{record.jobClass,jdbcType=VARCHAR},
      </if>
      <if test="record.jobBeanName != null" >
        JOB_BEAN_NAME = #{record.jobBeanName,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null" >
        METHOD_NAME = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.cronExpression != null" >
        CRON_EXPRESSION = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.concurrent != null" >
        CONCURRENT = #{record.concurrent,jdbcType=INTEGER},
      </if>
      <if test="record.enableIp != null" >
        ENABLE_IP = #{record.enableIp,jdbcType=VARCHAR},
      </if>
      <if test="record.delayTime != null" >
        DELAY_TIME = #{record.delayTime,jdbcType=BIGINT},
      </if>
      <if test="record.flag != null" >
        FLAG = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.effectTime != null" >
        EFFECT_TIME = #{record.effectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireTime != null" >
        EXPIRE_TIME = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.arguments != null" >
        ARGUMENTS = #{record.arguments,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update TF_SCHEDULER_CONF
    set ID = #{record.id,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      JOB_CLASS = #{record.jobClass,jdbcType=VARCHAR},
      JOB_BEAN_NAME = #{record.jobBeanName,jdbcType=VARCHAR},
      METHOD_NAME = #{record.methodName,jdbcType=VARCHAR},
      CRON_EXPRESSION = #{record.cronExpression,jdbcType=VARCHAR},
      CONCURRENT = #{record.concurrent,jdbcType=INTEGER},
      ENABLE_IP = #{record.enableIp,jdbcType=VARCHAR},
      DELAY_TIME = #{record.delayTime,jdbcType=BIGINT},
      FLAG = #{record.flag,jdbcType=INTEGER},
      EFFECT_TIME = #{record.effectTime,jdbcType=TIMESTAMP},
      EXPIRE_TIME = #{record.expireTime,jdbcType=TIMESTAMP},
      ARGUMENTS = #{record.arguments,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update TF_SCHEDULER_CONF
    set ID = #{record.id,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      JOB_CLASS = #{record.jobClass,jdbcType=VARCHAR},
      JOB_BEAN_NAME = #{record.jobBeanName,jdbcType=VARCHAR},
      METHOD_NAME = #{record.methodName,jdbcType=VARCHAR},
      CRON_EXPRESSION = #{record.cronExpression,jdbcType=VARCHAR},
      CONCURRENT = #{record.concurrent,jdbcType=INTEGER},
      ENABLE_IP = #{record.enableIp,jdbcType=VARCHAR},
      DELAY_TIME = #{record.delayTime,jdbcType=BIGINT},
      FLAG = #{record.flag,jdbcType=INTEGER},
      EFFECT_TIME = #{record.effectTime,jdbcType=TIMESTAMP},
      EXPIRE_TIME = #{record.expireTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.test.dao.entity.SchedulerConfig" >
    update TF_SCHEDULER_CONF
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null" >
        JOB_CLASS = #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="jobBeanName != null" >
        JOB_BEAN_NAME = #{jobBeanName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        METHOD_NAME = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="concurrent != null" >
        CONCURRENT = #{concurrent,jdbcType=INTEGER},
      </if>
      <if test="enableIp != null" >
        ENABLE_IP = #{enableIp,jdbcType=VARCHAR},
      </if>
      <if test="delayTime != null" >
        DELAY_TIME = #{delayTime,jdbcType=BIGINT},
      </if>
      <if test="flag != null" >
        FLAG = #{flag,jdbcType=INTEGER},
      </if>
      <if test="effectTime != null" >
        EFFECT_TIME = #{effectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        EXPIRE_TIME = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="arguments != null" >
        ARGUMENTS = #{arguments,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.my.test.dao.entity.SchedulerConfig" >
    update TF_SCHEDULER_CONF
    set NAME = #{name,jdbcType=VARCHAR},
      JOB_CLASS = #{jobClass,jdbcType=VARCHAR},
      JOB_BEAN_NAME = #{jobBeanName,jdbcType=VARCHAR},
      METHOD_NAME = #{methodName,jdbcType=VARCHAR},
      CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
      CONCURRENT = #{concurrent,jdbcType=INTEGER},
      ENABLE_IP = #{enableIp,jdbcType=VARCHAR},
      DELAY_TIME = #{delayTime,jdbcType=BIGINT},
      FLAG = #{flag,jdbcType=INTEGER},
      EFFECT_TIME = #{effectTime,jdbcType=TIMESTAMP},
      EXPIRE_TIME = #{expireTime,jdbcType=TIMESTAMP},
      ARGUMENTS = #{arguments,jdbcType=LONGVARBINARY}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.test.dao.entity.SchedulerConfig" >
    update TF_SCHEDULER_CONF
    set NAME = #{name,jdbcType=VARCHAR},
      JOB_CLASS = #{jobClass,jdbcType=VARCHAR},
      JOB_BEAN_NAME = #{jobBeanName,jdbcType=VARCHAR},
      METHOD_NAME = #{methodName,jdbcType=VARCHAR},
      CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
      CONCURRENT = #{concurrent,jdbcType=INTEGER},
      ENABLE_IP = #{enableIp,jdbcType=VARCHAR},
      DELAY_TIME = #{delayTime,jdbcType=BIGINT},
      FLAG = #{flag,jdbcType=INTEGER},
      EFFECT_TIME = #{effectTime,jdbcType=TIMESTAMP},
      EXPIRE_TIME = #{expireTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="com.my.test.dao.entity.SchedulerConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
     
    from TF_SCHEDULER_CONF
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>